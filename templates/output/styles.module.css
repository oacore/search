/* stylelint-disable declaration-no-important */
.search-result:not(:last-child) {
  margin-bottom: 1rem;
}

.card {
  min-width: unset;
}

.card:not(:first-child) {
  margin-top: 1rem;
}

.repository-name {
  font-style: normal;
  font-weight: 500;
  line-height: 24px;
  color: var(--gray-900);
  letter-spacing: 0.0015em;
}

.pdf-size {
  color: var(--gray-800);
}

.author-link {
  color: var(--gray-800);
  text-decoration: underline;
}

.chip.contained {
  color: var(--white);
  background: var(--primary);
}

.chip {
  padding: 2px 4px;
  font-size: 0.625rem;
  line-height: 0.75rem;
  color: var(--primary);
  text-transform: uppercase;
  letter-spacing: 0.015em;
  border-radius: 4px;
}

.chip:not(:first-child) {
  margin-right: 1rem;
}

.chips-list {
  margin-bottom: 0;
}

.chips-list .chips-item::before {
  content: '';
}

.card .map {
  width: auto;
  margin: -1rem -1rem 1rem;
}

.keywords-list {
  display: inline;
  padding: 0;
  margin: 0;
  list-style: none;
}

.keywords-list li {
  display: inline;
}

.keywords-list li:not(:last-child)::after {
  content: ',\2000';
}

.keywords-icon {
  margin: 0 0.5rem 0.25rem 0;
  color: var(--gray-800);
}

.abstract {
  margin-bottom: var(--spacer);
}

.error {
  margin: 0 auto;
  text-align: center;
}

.error-text {
  color: var(--gray-400);
}

.error-icon {
  color: var(--primary);
}

.doi,
.document-type {
  font-size: 11px;
}

.doi {
  color: var(--primary);
}

.document-type {
  padding: 0.2rem;
  margin-right: 1rem;
  color: var(--white);
  text-transform: uppercase;
  background-color: var(--primary);
  border: 1px solid transparent;
  border-radius: 0.3rem;
}

/* In this case we need to use !important to disable original container */
.output-container {
  padding-right: var(--page-padding-x);
  grid-template-columns:
    calc((100vw - 2 * 2rem) * var(--main-content-ratio))
    1fr !important;
}

.container-sidebar {
  padding-top: var(--page-padding-y);
}

.container-main {
  padding-top: var(--page-padding-y);
  padding-left: var(--page-padding-x);
}

.background {
  width: 100vw;
  padding: var(--page-padding-y) var(--page-padding-x) 1.5rem
    var(--page-padding-x);
  background-color: var(--gray-100);
}

.background h1 {
  max-width: 50rem;
}

@media (--screen-until-desktop) {
  .output-container {
    grid-template-columns: 1fr !important;
  }

  .background h1 {
    max-width: 100vw;
  }
}
